var L=Object.defineProperty;var n=Object.getOwnPropertySymbols;var C=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var i=(t,r,e)=>r in t?L(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e,o=(t,r)=>{for(var e in r||(r={}))C.call(r,e)&&i(t,e,r[e]);if(n)for(var e of n(r))s.call(r,e)&&i(t,e,r[e]);return t};var d=(t,r)=>{var e={};for(var a in t)C.call(t,a)&&r.indexOf(a)<0&&(e[a]=t[a]);if(t!=null&&n)for(var a of n(t))r.indexOf(a)<0&&s.call(t,a)&&(e[a]=t[a]);return e};import m from"react";import{ChartLegend as g}from"./ChartLegend";const T=f=>{var p=f,{data:t,chartRef:r,component:e}=p,a=d(p,["data","chartRef","component"]);var c;const h={data:typeof t=="function"?t((c=r.current)==null?void 0:c.chartInstance.canvas):t};return m.createElement("div",o({className:"lc-chart-legend-wrapper"},a),e?e(h):m.createElement(g,o({},h)))};export{T as ChartLegendWrapper};
//# sourceMappingURL=ChartLegendWrapper.js.map
