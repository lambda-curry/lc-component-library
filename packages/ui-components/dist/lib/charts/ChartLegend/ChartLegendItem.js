var f=Object.defineProperty;var a=Object.getOwnPropertySymbols;var m=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var u=(e,n,t)=>n in e?f(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,d=(e,n)=>{for(var t in n||(n={}))m.call(n,t)&&u(e,t,n[t]);if(a)for(var t of a(n))c.call(n,t)&&u(e,t,n[t]);return e};var b=(e,n)=>{var t={};for(var l in e)m.call(e,l)&&n.indexOf(l)<0&&(t[l]=e[l]);if(e!=null&&a)for(var l of a(e))n.indexOf(l)<0&&c.call(e,l)&&(t[l]=e[l]);return t};import r from"react";import L from"classnames";import{ButtonUnstyled as y}from"../../buttons/ButtonUnstyled";import{ChartLabel as N}from"../ChartLabel/ChartLabel";const F=x=>{var s=x,{index:e,color:n,label:t,value:l,onClick:o,active:h,interactive:g}=s,C=b(s,["index","color","label","value","onClick","active","interactive"]);if(!t)return null;const p=v=>{o&&o(v,e)},i=()=>r.createElement(r.Fragment,null,r.createElement(N,{className:"lc-chart-legend-item-label",color:n,label:t}),l&&r.createElement("span",{className:"lc-chart-legend-item-value"},"(",l,")"));return r.createElement("li",d({className:L("lc-chart-legend-item",{"lc-chart-legend-item-active":h})},C),g?r.createElement(y,{className:"lc-chart-legend-item-button",onClick:p},r.createElement(i,null)):r.createElement(i,null))};export{F as ChartLegendItem};
//# sourceMappingURL=ChartLegendItem.js.map
