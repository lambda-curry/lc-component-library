{
  "version": 3,
  "sources": ["../../../../src/lib/charts/ChartLegend/ChartLegendItem.tsx"],
  "sourcesContent": ["import React, { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { ButtonUnstyled } from '../../buttons/ButtonUnstyled';\nimport { ChartLabel } from '../ChartLabel/ChartLabel';\n\nexport interface ChartLegendItemProps {\n  index: number;\n  color: string;\n  label?: string;\n  value?: string | number;\n  active?: boolean;\n  interactive?: boolean;\n  onClick?: (event: React.MouseEvent<any, MouseEvent>, index: number) => void;\n}\n\nexport const ChartLegendItem: FC<ChartLegendItemProps> = ({\n  index,\n  color,\n  label,\n  value,\n  onClick,\n  active,\n  interactive,\n  ...props\n}) => {\n  if (!label) return null;\n\n  const handleClick = (event: React.MouseEvent<any, MouseEvent>) => {\n    if (onClick) onClick(event, index);\n  };\n\n  const ItemContent = () => (\n    <>\n      <ChartLabel className=\"lc-chart-legend-item-label\" color={color} label={label} />\n      {value && <span className=\"lc-chart-legend-item-value\">({value})</span>}\n    </>\n  );\n\n  return (\n    <li className={classNames('lc-chart-legend-item', { 'lc-chart-legend-item-active': active })} {...props}>\n      {interactive ? (\n        <ButtonUnstyled className=\"lc-chart-legend-item-button\" onClick={handleClick}>\n          <ItemContent />\n        </ButtonUnstyled>\n      ) : (\n        <ItemContent />\n      )}\n    </li>\n  );\n};\n"],
  "mappings": "2fAAA,qBACA,0BAEA,8DACA,sDAYO,KAAM,GAA4C,AAAC,GASpD,CAToD,QACxD,SACA,QACA,QACA,QACA,UACA,SACA,eAPwD,EAQrD,IARqD,EAQrD,CAPH,QACA,QACA,QACA,QACA,UACA,SACA,gBAGA,GAAI,CAAC,EAAO,MAAO,MAEnB,KAAM,GAAc,AAAC,GAA6C,CAChE,AAAI,GAAS,EAAQ,EAAO,IAGxB,EAAc,IAClB,gCACE,gBAAC,EAAD,CAAY,UAAU,6BAA6B,MAAO,EAAO,MAAO,IACvE,GAAS,gBAAC,OAAD,CAAM,UAAU,8BAA6B,IAAE,EAAM,MAInE,MACE,iBAAC,KAAD,GAAI,UAAW,EAAW,uBAAwB,CAAE,8BAA+B,KAAe,GAC/F,EACC,gBAAC,EAAD,CAAgB,UAAU,8BAA8B,QAAS,GAC/D,gBAAC,EAAD,OAGF,gBAAC,EAAD",
  "names": []
}
