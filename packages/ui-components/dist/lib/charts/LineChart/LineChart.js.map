{
  "version": 3,
  "sources": ["../../../../src/lib/charts/LineChart/LineChart.tsx"],
  "sourcesContent": ["import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { merge } from 'lodash';\nimport { ChartJSData, ChartJSOptions } from '../chart.helpers';\nimport { AxialChart, AxialChartProps } from '../AxialChart';\n\nexport interface LineChartProps extends Partial<AxialChartProps> {}\n\nexport const LineChart: FC<LineChartProps> = ({ labels, datasets, chartJSData, options, className, ...props }) => {\n  const defaultOptions: ChartJSOptions = {};\n\n  const getComputedData = (): ChartJSData => {\n    if (chartJSData) return chartJSData;\n\n    if (!datasets) return {} as ChartJSData;\n\n    return {\n      labels,\n      datasets: datasets?.map(({ color, ...dataset }) => {\n        return {\n          fill: 'none',\n          lineTension: 0,\n          borderWidth: 2,\n          borderColor: color,\n          borderCapStyle: 'round',\n          pointRadius: 0,\n          pointHitRadius: 10,\n          pointBorderColor: color,\n          pointBackgroundColor: color,\n          pointHoverRadius: 3,\n          ...dataset\n        };\n      })\n    };\n  };\n\n  return (\n    <AxialChart\n      type=\"line\"\n      chartJSData={getComputedData()}\n      className={classNames('lc-chart-line', className)}\n      options={merge(defaultOptions, options)}\n      {...props}\n    />\n  );\n};\n"],
  "mappings": "2fAAA,qBACA,0BACA,+BAEA,2CAIO,KAAM,GAAgC,AAAC,GAAoE,CAApE,QAAE,UAAQ,WAAU,cAAa,UAAS,aAA1C,EAAwD,IAAxD,EAAwD,CAAtD,SAAQ,WAAU,cAAa,UAAS,cACtF,KAAM,GAAiC,GA2BvC,MACE,iBAAC,EAAD,GACE,KAAK,OACL,YAAa,AA5BO,KAClB,GAEC,GAEE,CACL,SACA,SAAU,iBAAU,IAAI,AAAC,GAA0B,CAA1B,QAAE,UAAF,EAAY,IAAZ,EAAY,CAAV,UACzB,MAAO,IACL,KAAM,OACN,YAAa,EACb,YAAa,EACb,YAAa,EACb,eAAgB,QAChB,YAAa,EACb,eAAgB,GAChB,iBAAkB,EAClB,qBAAsB,EACtB,iBAAkB,GACf,MAhBa,OA0BpB,UAAW,EAAW,gBAAiB,GACvC,QAAS,EAAM,EAAgB,IAC3B",
  "names": []
}
