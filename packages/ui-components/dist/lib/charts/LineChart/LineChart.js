var x=Object.defineProperty;var e=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable;var m=(t,r,o)=>r in t?x(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o,n=(t,r)=>{for(var o in r||(r={}))s.call(r,o)&&m(t,o,r[o]);if(e)for(var o of e(r))h.call(r,o)&&m(t,o,r[o]);return t};var p=(t,r)=>{var o={};for(var a in t)s.call(t,a)&&r.indexOf(a)<0&&(o[a]=t[a]);if(t!=null&&e)for(var a of e(t))r.indexOf(a)<0&&h.call(t,a)&&(o[a]=t[a]);return o};import S from"react";import D from"classnames";import{merge as J}from"lodash";import{AxialChart as P}from"../AxialChart";const T=g=>{var C=g,{labels:t,datasets:r,chartJSData:o,options:a,className:u}=C,d=p(C,["labels","datasets","chartJSData","options","className"]);const c={};return S.createElement(P,n({type:"line",chartJSData:(()=>o||(r?{labels:t,datasets:r==null?void 0:r.map(b=>{var l=b,{color:i}=l,f=p(l,["color"]);return n({fill:"none",lineTension:0,borderWidth:2,borderColor:i,borderCapStyle:"round",pointRadius:0,pointHitRadius:10,pointBorderColor:i,pointBackgroundColor:i,pointHoverRadius:3},f)})}:{}))(),className:D("lc-chart-line",u),options:J(c,a)},d))};export{T as LineChart};
//# sourceMappingURL=LineChart.js.map
