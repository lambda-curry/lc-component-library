{
  "version": 3,
  "sources": ["../../../src/lib/character-limit/CharacterLimit.tsx"],
  "sourcesContent": ["import React, { FC, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { stripTags } from '../util/formatters';\n\nexport interface CharacterLimitEffect {\n  limit: number;\n  value: string;\n}\n\nexport interface CharacterLimitProps {\n  limit: number;\n  characterCount: number;\n  className?: string;\n}\n\nexport interface CharacterLimitHelpers {\n  newValue: string;\n  previousValue: string;\n  characterCount: number;\n  charactersRemaining: number;\n}\n\nexport const useCharacterLimit = ({ value, limit }: CharacterLimitEffect): CharacterLimitHelpers => {\n  const [characterCount, setCharacterCount] = useState(0);\n  const [previousValue, setPreviousValue] = useState(value);\n\n  const handleValueChanged = (value: string) => {\n    const newValue = value;\n    const strippedNewValue = stripTags(newValue || '');\n\n    setCharacterCount(strippedNewValue.length);\n    setPreviousValue(newValue);\n  };\n\n  useEffect(() => {\n    handleValueChanged(value);\n  }, [value]);\n\n  return { newValue: value, previousValue, characterCount, charactersRemaining: limit - characterCount };\n};\n\nexport const CharacterLimit: FC<CharacterLimitProps> = ({ limit, characterCount, className }) => (\n  <div className={classNames('character-limit', className)}>{limit - characterCount} characters remaining</div>\n);\n"],
  "mappings": "AAAA,mDACA,0BACA,+CAoBO,KAAM,GAAoB,CAAC,CAAE,QAAO,WAAyD,CAClG,KAAM,CAAC,EAAgB,GAAqB,EAAS,GAC/C,CAAC,EAAe,GAAoB,EAAS,GAE7C,EAAqB,AAAC,GAAkB,CAC5C,KAAM,GAAW,EACX,EAAmB,EAAU,GAAY,IAE/C,EAAkB,EAAiB,QACnC,EAAiB,IAGnB,SAAU,IAAM,CACd,EAAmB,IAClB,CAAC,IAEG,CAAE,SAAU,EAAO,gBAAe,iBAAgB,oBAAqB,EAAQ,IAG3E,EAA0C,CAAC,CAAE,QAAO,iBAAgB,eAC/E,gBAAC,MAAD,CAAK,UAAW,EAAW,kBAAmB,IAAa,EAAQ,EAAe",
  "names": []
}
