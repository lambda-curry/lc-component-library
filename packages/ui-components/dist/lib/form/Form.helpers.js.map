{
  "version": 3,
  "sources": ["../../../src/lib/form/Form.helpers.ts"],
  "sourcesContent": ["export interface FormReducerState {\n  activeModal: FormModals;\n  shouldCheckForUnsavedChanges: boolean;\n  capturedUnsavedChangesEvent?: Event;\n}\n\n// export type ServerRequestStatus = 'waiting' | 'sending' | 'sent' | 'error';\nexport type FormModals = 'none' | 'unsavedChangesModal';\n\nexport interface FormReducerAction {\n  name: keyof typeof formReducers;\n  payload?: any;\n}\n\nconst formReducers = {\n  closeModal: (state: FormReducerState, _: any) => ({ ...state, activeModal: 'none' as FormModals }),\n  openModal: (state: FormReducerState, activeModal: FormModals) => ({ ...state, activeModal }),\n  setShouldCheckForUnsavedChanges: (state: FormReducerState, shouldCheckForUnsavedChanges: boolean) => ({\n    ...state,\n    shouldCheckForUnsavedChanges\n  }),\n  setCapturedUnsavedChangesEvent: (state: FormReducerState, capturedUnsavedChangesEvent: Event) => ({\n    ...state,\n    capturedUnsavedChangesEvent\n  })\n};\n\nexport const formReducer = (state: FormReducerState, action: FormReducerAction): FormReducerState => {\n  if (!formReducers[action.name]) {\n    throw new Error(`reducer ${action.name} not defined`);\n  }\n\n  const nextState: FormReducerState = formReducers[action.name](state, action.payload);\n  return nextState;\n};\n"],
  "mappings": "6aAcA,KAAM,GAAe,CACnB,WAAY,CAAC,EAAyB,IAAY,OAAK,GAAL,CAAY,YAAa,SAC3E,UAAW,CAAC,EAAyB,IAA6B,OAAK,GAAL,CAAY,gBAC9E,gCAAiC,CAAC,EAAyB,IAA2C,OACjG,GADiG,CAEpG,iCAEF,+BAAgC,CAAC,EAAyB,IAAwC,OAC7F,GAD6F,CAEhG,iCAIS,EAAc,CAAC,EAAyB,IAAgD,CACnG,GAAI,CAAC,EAAa,EAAO,MACvB,KAAM,IAAI,OAAM,WAAW,EAAO,oBAIpC,MADoC,GAAa,EAAO,MAAM,EAAO,EAAO",
  "names": []
}
