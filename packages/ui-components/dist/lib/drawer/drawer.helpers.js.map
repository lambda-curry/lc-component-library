{
  "version": 3,
  "sources": ["../../../src/lib/drawer/drawer.helpers.ts"],
  "sourcesContent": ["import { Dispatch } from 'react';\n\nexport interface DrawerType {\n  name: string;\n  data?: any;\n}\n\nexport interface DrawerReducerState {\n  active?: string;\n  data: { [x: string]: any };\n}\n\nexport const DrawerReducers = {\n  toggleDrawer: (state: DrawerReducerState, drawer: DrawerType) => {\n    if (state.active === drawer.name) {\n      delete state.active;\n      return { ...state };\n    }\n\n    if (drawer.data) {\n      state.data[drawer.name] = Object.assign(state.data[drawer.name] || {}, drawer.data);\n    }\n\n    return { ...state, active: drawer.name };\n  },\n  setDrawerData: (state: DrawerReducerState, drawer: DrawerType) => {\n    state.data[drawer.name] = Object.assign(state.data[drawer.name] || {}, drawer.data);\n    return { ...state };\n  },\n  clearDrawerData: (state: DrawerReducerState, drawer: DrawerType) => {\n    delete state.data[drawer.name];\n    return { ...state };\n  }\n};\n\nexport interface DrawerReducerAction<T> {\n  name: keyof typeof DrawerReducers;\n  payload?: T;\n}\n\nexport type DrawerDispatch<T> = Dispatch<DrawerReducerAction<T>>;\n\nexport const DrawerReducer = (state: DrawerReducerState, action: DrawerReducerAction<any>) => {\n  if (!DrawerReducers[action.name]) {\n    throw new Error(`reducer ${action.name} not defined`);\n  }\n\n  const nextState: DrawerReducerState = DrawerReducers[action.name](state, action.payload);\n  return nextState;\n};\n\nexport interface DrawerActions {\n  toggleDrawer: (payload: DrawerType) => void;\n  setDrawerData: (payload: DrawerType) => void;\n  clearDrawerData: (payload: DrawerType) => void;\n  getDrawerData: <T>(name?: string) => T;\n}\n\nexport const drawerActions: (state: DrawerReducerState, dispatch: DrawerDispatch<any>) => DrawerActions = (\n  state,\n  dispatch\n) => ({\n  toggleDrawer: (payload: DrawerType) => dispatch({ name: 'toggleDrawer', payload }),\n  setDrawerData: (payload: DrawerType) => dispatch({ name: 'setDrawerData', payload }),\n  clearDrawerData: (payload: DrawerType) => dispatch({ name: 'clearDrawerData', payload }),\n  getDrawerData: (name?: string) => {\n    if (name) return state.data[name] ?? {};\n    return state.data;\n  }\n});\n"],
  "mappings": "6aAYO,KAAM,GAAiB,CAC5B,aAAc,CAAC,EAA2B,IACpC,EAAM,SAAW,EAAO,KAC1B,OAAO,GAAM,OACN,KAAK,IAGV,GAAO,MACT,GAAM,KAAK,EAAO,MAAQ,OAAO,OAAO,EAAM,KAAK,EAAO,OAAS,GAAI,EAAO,OAGzE,OAAK,GAAL,CAAY,OAAQ,EAAO,QAEpC,cAAe,CAAC,EAA2B,IACzC,GAAM,KAAK,EAAO,MAAQ,OAAO,OAAO,EAAM,KAAK,EAAO,OAAS,GAAI,EAAO,MACvE,KAAK,IAEd,gBAAiB,CAAC,EAA2B,IAC3C,OAAO,GAAM,KAAK,EAAO,MAClB,KAAK,KAWH,EAAgB,CAAC,EAA2B,IAAqC,CAC5F,GAAI,CAAC,EAAe,EAAO,MACzB,KAAM,IAAI,OAAM,WAAW,EAAO,oBAIpC,MADsC,GAAe,EAAO,MAAM,EAAO,EAAO,UAWrE,EAA6F,CACxG,EACA,IACI,EACJ,aAAc,AAAC,GAAwB,EAAS,CAAE,KAAM,eAAgB,YACxE,cAAe,AAAC,GAAwB,EAAS,CAAE,KAAM,gBAAiB,YAC1E,gBAAiB,AAAC,GAAwB,EAAS,CAAE,KAAM,kBAAmB,YAC9E,cAAe,AAAC,GAAkB,CAjEpC,MAkEI,MAAI,GAAa,KAAM,KAAK,KAAX,OAAoB,GAC9B,EAAM",
  "names": []
}
