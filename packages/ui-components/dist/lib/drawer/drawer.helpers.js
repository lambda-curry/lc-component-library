var d=Object.defineProperty,i=Object.defineProperties;var p=Object.getOwnPropertyDescriptors;var n=Object.getOwnPropertySymbols;var y=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable;var c=(r,e,a)=>e in r?d(r,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):r[e]=a,t=(r,e)=>{for(var a in e||(e={}))y.call(e,a)&&c(r,a,e[a]);if(n)for(var a of n(e))u.call(e,a)&&c(r,a,e[a]);return r},w=(r,e)=>i(r,p(e));const o={toggleDrawer:(r,e)=>r.active===e.name?(delete r.active,t({},r)):(e.data&&(r.data[e.name]=Object.assign(r.data[e.name]||{},e.data)),w(t({},r),{active:e.name})),setDrawerData:(r,e)=>(r.data[e.name]=Object.assign(r.data[e.name]||{},e.data),t({},r)),clearDrawerData:(r,e)=>(delete r.data[e.name],t({},r))},T=(r,e)=>{if(!o[e.name])throw new Error(`reducer ${e.name} not defined`);return o[e.name](r,e.payload)},l=(r,e)=>({toggleDrawer:a=>e({name:"toggleDrawer",payload:a}),setDrawerData:a=>e({name:"setDrawerData",payload:a}),clearDrawerData:a=>e({name:"clearDrawerData",payload:a}),getDrawerData:a=>{var D;return a?(D=r.data[a])!=null?D:{}:r.data}});export{T as DrawerReducer,o as DrawerReducers,l as drawerActions};
//# sourceMappingURL=drawer.helpers.js.map
