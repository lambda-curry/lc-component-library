{
  "version": 3,
  "sources": ["../../../src/lib/drawer/Drawer.tsx"],
  "sourcesContent": ["import React, { FC, KeyboardEvent, MouseEvent } from 'react';\nimport { Drawer as MuiDrawer } from '@material-ui/core';\nimport classNames from 'classnames';\nimport './drawer.css';\nimport { DrawerType } from './drawer.helpers';\nimport { useDrawer } from './DrawerProvider';\n\nexport type DrawerAnchor = 'top' | 'left' | 'bottom' | 'right';\n\nexport interface DrawerProps {\n  name: string;\n  className?: string;\n  options?: { anchor?: DrawerAnchor; width?: number };\n}\n\nconst toggleDrawer: (\n  name: string,\n  toggleFunction: (drawer: DrawerType) => void\n) => (event: KeyboardEvent | MouseEvent) => void = (name, toggleFunction) => event => {\n  if (event.type === 'keydown' && ((event as KeyboardEvent).key === 'Tab' || (event as KeyboardEvent).key === 'Shift'))\n    return;\n\n  toggleFunction({ name });\n};\n\nexport const Drawer: FC<DrawerProps> = ({ name, className, options: overrides, ...props }) => {\n  const { drawerActions, drawerState } = useDrawer();\n  const isOpen = drawerState.active === name;\n\n  const options = {\n    anchor: 'right' as DrawerAnchor,\n    width: 320,\n    ...overrides\n  };\n\n  return (\n    <MuiDrawer\n      className={classNames('lc-drawer', className)}\n      anchor={options.anchor}\n      open={isOpen}\n      onClose={toggleDrawer(name, drawerActions.toggleDrawer)}\n      PaperProps={{ className: 'lc-drawer-content', style: { width: `${options.width}px` } }}\n      {...props}\n    />\n  );\n};\n"],
  "mappings": "2fAAA,qBACA,2CACA,0BACA,qBAEA,6CAUA,KAAM,GAG6C,CAAC,EAAM,IAAmB,GAAS,CACpF,AAAI,EAAM,OAAS,WAAe,GAAwB,MAAQ,OAAU,EAAwB,MAAQ,UAG5G,EAAe,CAAE,UAGN,EAA0B,AAAC,GAAsD,CAAtD,QAAE,QAAM,YAAW,QAAS,GAA5B,EAA0C,IAA1C,EAA0C,CAAxC,OAAM,YAAW,YACzD,KAAM,CAAE,gBAAe,eAAgB,IACjC,EAAS,EAAY,SAAW,EAEhC,EAAU,GACd,OAAQ,QACR,MAAO,KACJ,GAGL,MACE,iBAAC,EAAD,GACE,UAAW,EAAW,YAAa,GACnC,OAAQ,EAAQ,OAChB,KAAM,EACN,QAAS,EAAa,EAAM,EAAc,cAC1C,WAAY,CAAE,UAAW,oBAAqB,MAAO,CAAE,MAAO,GAAG,EAAQ,aACrE",
  "names": []
}
