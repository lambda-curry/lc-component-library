{
  "version": 3,
  "sources": ["../../../src/lib/file-uploader/FileUploader.tsx"],
  "sourcesContent": ["// Vendors\nimport React, { FC, useEffect } from 'react';\nimport { useDropzone, FileRejection, DropEvent, DropzoneOptions } from 'react-dropzone';\nimport { get as _get } from 'lodash';\nimport classNames from 'classnames';\n\n// Components\nimport { ButtonUnstyled } from '../buttons/ButtonUnstyled';\nimport { ButtonAccent } from '../buttons/ButtonAccent';\nimport { ButtonLink } from '../buttons/ButtonLink';\nimport { Icon } from '../icon/Icon';\n\n// Helpers\nimport { formatBytes, formatMimeTypesForDisplay } from './FileUploader.helpers';\n\n// Assets\nimport placeholderImage from '../../assets/file-uploader-placeholder.js';\n\n// Styles\nimport './file-uploader.css';\n\n// Types\nimport { FileUpload, FileUploaderProps } from './FileUploader.types';\n\nexport const FileUploader: FC<FileUploaderProps> = ({\n  name,\n  className,\n  replaceOnly,\n  maxSize = 1048576, // 1 MB\n  minSize,\n  // TODO: Consider allowing file extensions in addition to mime-types\n  accept = ['image/jpeg', 'image/png', 'image/gif'],\n  multiple = false,\n  disabled,\n  dropzoneText,\n  dropzoneActiveText,\n  dropzoneAcceptText,\n  dropzoneRejectText,\n  formikProps,\n  onDrop,\n  onDropAccepted,\n  onDropRejected,\n  onClearAll,\n  onRemoveFile,\n  ...props\n}) => {\n  const files = formikProps ? _get(formikProps?.values, name) || [] : props.value || [];\n  const error = formikProps ? _get(formikProps?.errors, name) : props.error || '';\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  const processFile = (acceptedFile: File): FileUpload => {\n    return Object.assign(acceptedFile, { preview: URL.createObjectURL(acceptedFile) });\n  };\n\n  const processMultipleFiles = (acceptedFiles: File[]): FileUpload[] => {\n    const newFiles = [...(multiple ? files : []), ...acceptedFiles.map((file: any) => processFile(file))];\n\n    // Remove duplicate files\n    const uniqueNewFiles = newFiles.reduce((acc, curr) => {\n      acc[curr.path] = curr;\n      return acc;\n    }, {});\n\n    return Object.values(uniqueNewFiles);\n  };\n\n  const handleDrop = (acceptedFiles: File[], rejectedFiles: FileRejection[], event: DropEvent) => {\n    const newFiles = processMultipleFiles(acceptedFiles);\n\n    if (formikProps?.setFieldValue) formikProps.setFieldValue(name, newFiles);\n    if (formikProps?.setFieldError) formikProps.setFieldError(name, '');\n\n    if (onDrop) onDrop(newFiles, rejectedFiles, event);\n\n    if (onDropAccepted) onDropAccepted(newFiles, event);\n\n    if (onDropRejected) onDropRejected(rejectedFiles, event);\n  };\n\n  const clearAll = () => {\n    if (formikProps?.setFieldValue) formikProps.setFieldValue(name, []);\n    if (formikProps?.setFieldError) formikProps.setFieldError(name, undefined);\n\n    if (onClearAll) onClearAll();\n  };\n\n  const removeFile = (event: React.MouseEvent<any, MouseEvent>, index: number) => {\n    event.stopPropagation();\n\n    const newFiles: FileUpload[] = [...files];\n    const removedFile = newFiles.splice(index, 1)[0];\n\n    if (formikProps?.setFieldValue) formikProps.setFieldValue(name, newFiles);\n\n    if (onRemoveFile) onRemoveFile(index, removedFile, newFiles);\n  };\n\n  const dropzoneOptions: DropzoneOptions = {\n    maxSize,\n    minSize,\n    accept,\n    multiple,\n    disabled,\n    onDrop: handleDrop\n  };\n\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, open } = useDropzone(dropzoneOptions);\n\n  const getDropzoneText = () => {\n    if (isDragAccept) return dropzoneAcceptText || `${multiple ? 'All files' : 'The file'} will be accepted.`;\n\n    if (isDragReject) return dropzoneRejectText || `${multiple ? 'Some files' : 'The file'} will be rejected.`;\n\n    if (isDragActive) return dropzoneActiveText || `Drop the file${multiple && 's'} here...`;\n\n    return (\n      dropzoneText ||\n      `Drag 'n drop ${multiple ? 'some files' : 'a file'} here, or click to select ${multiple ? 'some' : 'one'}.`\n    );\n  };\n\n  const dropzoneClassName = classNames('lc-file-uploader-dropzone', {\n    'lc-file-uploader-dropzone-active': isDragActive,\n    'lc-file-uploader-dropzone-accept': isDragAccept,\n    'lc-file-uploader-dropzone-reject': isDragReject\n  });\n\n  return (\n    <>\n      <div\n        className={classNames('lc-file-uploader', className, {\n          'lc-file-uploader-disabled': disabled\n        })}\n      >\n        <div {...getRootProps({ className: dropzoneClassName })}>\n          <input name={name} {...getInputProps()} />\n\n          {files && files.length > 0 && (\n            <ul className=\"lc-file-uploader-dropzone-files\">\n              {files.map((file: FileUpload, index: number) => (\n                <li key={index}>\n                  <ButtonUnstyled\n                    className=\"lc-file-uploader-dropzone-file\"\n                    disabled={replaceOnly}\n                    onClick={event => removeFile(event, index)}\n                  >\n                    <div className=\"lc-file-uploader-dropzone-file-thumb\">\n                      <img\n                        src={file.preview}\n                        alt=\"File upload preview\"\n                        className=\"lc-file-uploader-dropzone-file-thumb-image\"\n                      />\n                      <div className=\"lc-file-uploader-dropzone-file-thumb-overlay\">\n                        <Icon name=\"trash\" className=\"lc-file-uploader-dropzone-file-remove-icon\" />\n                      </div>\n                    </div>\n\n                    {multiple && file.name && <div className=\"lc-file-uploader-dropzone-file-name\">{file.name}</div>}\n                  </ButtonUnstyled>\n                </li>\n              ))}\n            </ul>\n          )}\n\n          {(!files || files.length < 1) && (\n            <>\n              <img\n                alt=\"File upload placeholder\"\n                src={placeholderImage}\n                className=\"lc-file-uploader-dropzone-placeholder\"\n              />\n              <div className=\"lc-file-uploader-dropzone-text\">{getDropzoneText()}</div>\n            </>\n          )}\n        </div>\n\n        <div className=\"lc-file-uploader-footer\">\n          <div className=\"lc-file-uploader-actions\">\n            <ButtonAccent onClick={open}>Choose File{multiple && 's'}</ButtonAccent>\n            {((files && files.length > 0 && !replaceOnly) || error) && (\n              <ButtonLink onClick={clearAll} style={{ marginLeft: '12px' }}>\n                Clear {multiple && <>All</>}\n              </ButtonLink>\n            )}\n          </div>\n\n          <div className=\"lc-flex-1\" />\n\n          <div className=\"lc-file-uploader-restrictions\">\n            {accept && <>{formatMimeTypesForDisplay(accept)}. </>}\n            {maxSize && <>Max size of {formatBytes(maxSize)}. </>}\n            {minSize && <>Min size of {formatBytes(minSize)}.</>}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"],
  "mappings": "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",
  "names": []
}
