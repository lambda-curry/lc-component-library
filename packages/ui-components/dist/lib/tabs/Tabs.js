var P=Object.defineProperty,C=Object.defineProperties;var x=Object.getOwnPropertyDescriptors;var c=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,y=Object.prototype.propertyIsEnumerable;var g=(a,r,e)=>r in a?P(a,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[r]=e,b=(a,r)=>{for(var e in r||(r={}))v.call(r,e)&&g(a,e,r[e]);if(c)for(var e of c(r))y.call(r,e)&&g(a,e,r[e]);return a},h=(a,r)=>C(a,x(r));var m=(a,r)=>{var e={};for(var o in a)v.call(a,o)&&r.indexOf(o)<0&&(e[o]=a[o]);if(a!=null&&c)for(var o of c(a))r.indexOf(o)<0&&y.call(a,o)&&(e[o]=a[o]);return e};import n,{useEffect as N,useState as $}from"react";import{makeStyles as k}from"@material-ui/core/styles";import B from"@material-ui/core/AppBar";import{Tabs as F,Tab as M}from"@material-ui/core";import S from"classnames";const _=a=>{const s=a,{children:r,value:e,index:o}=s,i=m(s,["children","value","index"]);return n.createElement("div",b({role:"tabpanel",hidden:e!==o,id:`tabpanel-${o}`,"aria-labelledby":`tab-${o}`},i),e===o&&n.createElement(n.Fragment,null,r))};function A(a){return{id:`tab-${a}`,"aria-controls":`tabpanel-${a}`}}const E=k(()=>({appBar:{backgroundColor:"rgba(0,0,0,0)",boxShadow:"none",color:"inherit"},indicator:{backgroundColor:"rgba(var(--lc-color-primary))"},root:{flexGrow:1,fontFamily:"inherit"},tab:{textTransform:"none",borderBottom:"2px solid rgba(var(--lc-color-primary-light))",color:"black",fontFamily:"inherit",maxWidth:"none","&:focus":{outline:"none"},"&.Mui-selected":{fontWeight:"700"}}})),J=W=>{var d=W,{ariaLabel:a,className:r,tabs:e,variant:o="fullWidth",onChange:i,value:s=0}=d,T=m(d,["ariaLabel","className","tabs","variant","onChange","value"]);const p=E(),[u,f]=$(s);return N(()=>{f(s)},[s]),n.createElement("div",{className:S(p.root,r)},n.createElement(B,{className:p.appBar,color:"default",position:"static"},n.createElement(F,h(b({variant:o,"aria-label":a,classes:{indicator:p.indicator}},T),{onChange:(l,t)=>{f(t),i&&i(l,t)},value:u}),e.map((l,t)=>n.createElement(M,b({key:`${typeof l.label=="string"?l.label.replace(" ",""):""}_tab_${t}`,className:p.tab,value:t,label:l.label},A(t)))))),e.map((l,t)=>n.createElement(_,{key:`${typeof l.label=="string"?l.label.replace(" ",""):""}_panel_${t}`,value:u,index:t},l.render)))};export{J as Tabs};
//# sourceMappingURL=Tabs.js.map
