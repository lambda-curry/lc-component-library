{
  "version": 3,
  "sources": ["../../../../src/lib/inputs/InputSearch/InputSearch.tsx"],
  "sourcesContent": ["import React, { FC, Reducer, useEffect, useReducer, ChangeEvent } from 'react';\nimport classNames from 'classnames';\nimport { AutoCompleteChange, InputSelect, InputSelectProps } from '../InputSelect/InputSelect';\nimport { useAsyncEffect, useDebounce } from '../../hooks';\nimport { AutocompleteInputChangeReason } from '@material-ui/lab';\nimport { get as _get } from 'lodash';\n\nexport interface InputSearchReducerState {\n  status?: ServerRequestStatus;\n  options: any[];\n  inputSearchValue: string;\n}\n\nexport interface InputSearchOptions {\n  ignoreFalseyInputValues?: boolean;\n  debounceTime?: number;\n  initialSearchValue?: string;\n  loading?: (response: any) => boolean;\n}\n\nexport type ServerRequestStatus = 'waiting' | 'sending' | 'sent' | 'error';\n\nexport interface InputSearchReducerAction {\n  name: keyof typeof inputSearchReducers;\n  payload?: any;\n}\n\nconst inputSearchReducers = {\n  setStatus: (state: InputSearchReducerState, status: ServerRequestStatus) => ({ ...state, status }),\n  setOptions: (state: InputSearchReducerState, options: any[]) => ({ ...state, options }),\n  setInputSearchValue: (state: InputSearchReducerState, inputSearchValue: string) => ({ ...state, inputSearchValue })\n};\n\nexport const inputSearchReducer = (\n  state: InputSearchReducerState,\n  action: InputSearchReducerAction\n): InputSearchReducerState => {\n  if (!inputSearchReducers[action.name]) {\n    throw new Error(`reducer ${action.name} not defined`);\n  }\n  const nextState: InputSearchReducerState = inputSearchReducers[action.name](state, action.payload);\n  return nextState;\n};\n\ntype InputSearchProps = Omit<InputSelectProps, 'options'> & {\n  url: string;\n  searchParam?: string;\n  searchOptions?: InputSearchOptions;\n  getOptions?: (data: any) => any[];\n};\n\nexport const InputSearch: FC<InputSearchProps> = ({\n  className,\n  url,\n  searchParam,\n  searchOptions,\n  optionLabelKey = 'label',\n  getOptions = (options: any[]) => options,\n  placeholder = 'Type to search...',\n  ...props\n}) => {\n  const selectedValue = _get(props.formikProps?.values, props.name);\n  const getValueLabel: (value: any, options: any[]) => string = (value, options) => {\n    if (!options) return '';\n\n    if (props.optionValueKey && options.length) {\n      const foundOption = options.find(option => option[props.optionValueKey as string] === value);\n      return foundOption ? foundOption[optionLabelKey] : '';\n    }\n\n    const valueLabel = typeof selectedValue === 'string' ? value : _get(value, optionLabelKey);\n    return typeof valueLabel === 'string' ? valueLabel : '';\n  };\n\n  const [state, dispatch] = useReducer<Reducer<InputSearchReducerState, InputSearchReducerAction>>(inputSearchReducer, {\n    status: 'waiting',\n    options: selectedValue ? [selectedValue] : [],\n    inputSearchValue: getValueLabel(selectedValue, selectedValue ? [selectedValue] : [])\n  });\n\n  const config: InputSearchOptions = {\n    ignoreFalseyInputValues: true,\n    ...searchOptions\n  };\n\n  const initialSearchInputValue = config.initialSearchValue ?? getValueLabel(selectedValue, state.options);\n\n  // Run an initial search if an initialSearchValue is given\n  useEffect(() => {\n    if (config.initialSearchValue !== undefined)\n      dispatch({ name: 'setInputSearchValue', payload: config.initialSearchValue });\n  }, [config.initialSearchValue]);\n\n  // Trigger input value change if formik value is changed from outside the input\n  useEffect(() => {\n    if (initialSearchInputValue === '') dispatch({ name: 'setInputSearchValue', payload: initialSearchInputValue });\n  }, [initialSearchInputValue]);\n\n  const searchTerm = useDebounce(state.inputSearchValue, config.debounceTime || 200);\n  const search = async () => {\n    // If the input value equals, we probably do not need to run another search - Jake 05/06/2021\n    if (!!searchTerm && searchTerm === getValueLabel(selectedValue, state.options)) return;\n    if (\n      config.ignoreFalseyInputValues &&\n      (config.initialSearchValue === undefined || config.initialSearchValue === null) &&\n      (state.inputSearchValue === undefined || state.inputSearchValue === null)\n    )\n      return;\n\n    const [base, params] = url.split('?');\n    const searchParams = new URLSearchParams(params);\n    if (searchParam) searchParams.set(searchParam, searchTerm);\n    const searchUrl = `${base}?${searchParams.toString()}`;\n    const response = await fetch(searchUrl);\n    const jsonData = await response.json();\n    const selectOptions = getOptions(jsonData);\n\n    // Add Selected value as the first option if an initial search term is provided to always provide the search value\n    if (\n      selectedValue &&\n      config.initialSearchValue &&\n      !selectOptions.some(\n        (selectOption: any) => _get(selectedValue, optionLabelKey) === _get(selectOption, optionLabelKey)\n      )\n    )\n      selectOptions.unshift(selectedValue);\n\n    dispatch({ name: 'setOptions', payload: selectOptions });\n  };\n\n  useAsyncEffect(search, undefined, [url, searchTerm]);\n\n  const handleChange: AutoCompleteChange = (event, value, reason, details) => {\n    if (props.formikProps?.handleChange) props.formikProps.handleChange(event);\n    if (typeof props.onChange === 'function')\n      props.onChange(event as ChangeEvent<HTMLInputElement>, value, reason, details);\n\n    const valueLabel = getValueLabel(value, state.options);\n    if (valueLabel) dispatch({ name: 'setInputSearchValue', payload: valueLabel });\n  };\n\n  const handleInputChange: (\n    event: ChangeEvent<any>,\n    inputValue: string,\n    reason: AutocompleteInputChangeReason\n  ) => void = (event, inputValue, reason) => {\n    // Note: we don't want to reset the input to empty if there is an input value in place\n    if (state.inputSearchValue && inputValue === '' && reason === 'reset') return;\n    if (!event && reason !== 'clear' && reason !== 'input') return;\n    dispatch({ name: 'setInputSearchValue', payload: inputValue });\n  };\n\n  return (\n    <InputSelect\n      className={classNames('lc-input-search', className)}\n      placeholder={placeholder}\n      optionLabelKey={optionLabelKey}\n      {...props}\n      options={state.options}\n      onChange={handleChange}\n      autocompleteConfig={{\n        inputValue: state.inputSearchValue,\n        disableClearable: false,\n        loading: config.loading ? config.loading(state.options) : state.options.length < 1,\n        onInputChange: handleInputChange,\n        ...props.autocompleteConfig\n      }}\n    />\n  );\n};\n"],
  "mappings": "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",
  "names": []
}
