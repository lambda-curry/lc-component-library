var S=Object.defineProperty,f=Object.defineProperties;var L=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,E=Object.prototype.propertyIsEnumerable;var v=(e,t,n)=>t in e?S(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))w.call(t,n)&&v(e,n,t[n]);if(i)for(var n of i(t))E.call(t,n)&&v(e,n,t[n]);return e},k=(e,t)=>f(e,L(t));var F=(e,t)=>{var n={};for(var c in e)w.call(e,c)&&t.indexOf(c)<0&&(n[c]=e[c]);if(e!=null&&i)for(var c of i(e))t.indexOf(c)<0&&E.call(e,c)&&(n[c]=e[c]);return n};import m,{useState as x,useEffect as H}from"react";import T from"classnames";import"./input-switch.css";const G=y=>{var d=y,{id:e,name:t,disabled:n,labelOn:c,labelOff:l,labelPlacement:r="end",formikProps:o,className:I,onChange:g}=d,h=F(d,["id","name","disabled","labelOn","labelOff","labelPlacement","formikProps","className","onChange"]);const s=o==null?void 0:o.getFieldProps(t),a=!!(s==null?void 0:s.value)||!!h.checked,[b,C]=x(h.label);H(()=>{a&&c&&C(c),!a&&l&&C(l)},[a,c,l]);const N=u=>{g&&g(u,u.target.checked),(s==null?void 0:s.onChange)&&s.onChange(u)},M=T("lc-input","lc-input-switch",{[`lc-input-switch-label-position-${r}`]:b&&r,["lc-input-switch-disabled"]:n},I);return m.createElement("label",{htmlFor:e,className:M},m.createElement("input",k(p(p({id:e,name:t,type:"checkbox",className:"lc-input-switch-input"},s),h),{checked:a,disabled:n,onChange:N})),m.createElement("span",{className:"lc-input-switch-label"},b))};export{G as InputSwitch};
//# sourceMappingURL=InputSwitch.js.map
