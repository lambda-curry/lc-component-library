var L=Object.defineProperty,M=Object.defineProperties;var b=Object.getOwnPropertyDescriptors;var m=Object.getOwnPropertySymbols;var I=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable;var p=(e,n,t)=>n in e?L(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,P=(e,n)=>{for(var t in n||(n={}))I.call(n,t)&&p(e,t,n[t]);if(m)for(var t of m(n))h.call(n,t)&&p(e,t,n[t]);return e},d=(e,n)=>M(e,b(n));var x=(e,n)=>{var t={};for(var a in e)I.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(e!=null&&m)for(var a of m(e))n.indexOf(a)<0&&h.call(e,a)&&(t[a]=e[a]);return t};import C from"react";import w from"classnames";import{InputBase as B}from"../InputBase";import{MultilineInput as H}from"../../multiline-input";const K=N=>{var u=N,{className:e,rows:n=3,characterLimit:t=0,onChange:a}=u,r=x(u,["className","rows","characterLimit","onChange"]);var s,f;const o=((s=r.formikProps)==null?void 0:s.getFieldProps)?(f=r.formikProps)==null?void 0:f.getFieldProps(r.name):null,F=(o==null?void 0:o.value)||r.value;return C.createElement(H,{value:F,characterLimit:t},({previousValue:i,characterCount:E})=>{const T=g=>{var c;let l=g.target.value;const k=(l==null?void 0:l.length)||0,v=(i==null?void 0:i.length)||0;t&&k>v&&E>=t&&(l=i),((c=r.formikProps)==null?void 0:c.setFieldValue)&&r.formikProps.setFieldValue(r.name,l),a&&a(g)};return C.createElement(B,d(P({},r),{rows:n,className:w("lc-input-textarea",e),multiline:!0,onChange:T}))})};export{K as InputTextarea};
//# sourceMappingURL=InputTextarea.js.map
