var c=Object.defineProperty,f=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,d=Object.prototype.propertyIsEnumerable;var i=(e,t,n)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&i(e,n,t[n]);if(o)for(var n of o(t))d.call(t,n)&&i(e,n,t[n]);return e},r=(e,t)=>f(e,g(t));var u=(e,t)=>{var n={};for(var a in e)l.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(e!=null&&o)for(var a of o(e))t.indexOf(a)<0&&d.call(e,a)&&(n[a]=e[a]);return n};import h from"react";import I from"classnames";import k from"react-text-mask";import{InputBase as P}from"../InputBase";const M=e=>{const m=e,{inputRef:t,mask:n,onChange:a}=m,C=u(m,["inputRef","mask","onChange"]);return h.createElement(k,r(p({showMask:!0,guide:!1,placeholderChar:"\u2000",mask:["(",/\d/,/\d/,/\d/,")"," ",/\d/,/\d/,/\d/,"-",/\d/,/\d/,/\d/,/\d/]},C),{ref:s=>{t(s?s.inputElement:null)},onChange:s=>{s.target.value==="(\u2000\u2000\u2000) \u2000\u2000\u2000-\u2000\u2000\u2000\u2000"&&(s.target.value=""),a&&a(s)}}))},L=n=>{var a=n,{className:e}=a,t=u(a,["className"]);return t.InputProps=r(p({},t.InputProps),{inputComponent:M}),h.createElement(P,p({placeholder:"(\u2000\u2000\u2000) \u2000\u2000\u2000-\u2000\u2000\u2000\u2000",type:"text",className:I("lc-input-phone",e)},t))};export{L as InputPhone};
//# sourceMappingURL=InputPhone.js.map
