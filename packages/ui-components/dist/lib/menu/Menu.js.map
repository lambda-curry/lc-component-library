{
  "version": 3,
  "sources": ["../../../src/lib/menu/Menu.tsx"],
  "sourcesContent": ["import React, { FC, ReactElement, useRef } from 'react';\nimport {\n  Menu as RCMenu,\n  MenuItem,\n  MenuItemProps as RCMenuItemProps,\n  MenuProps as RCMenuProps,\n  MenuDivider,\n  SubMenu,\n  SubMenuProps as RCSubMenuProps,\n  ControlledMenu,\n  useMenuState,\n  ControlledMenuProps,\n} from '@szhsin/react-menu';\nimport './menu.css';\nimport classNames from 'classnames';\n\nexport type MenuItems = (MenuItemProps | MenuDividerProps | SubMenuProps)[];\n\ninterface MenuItemProps extends RCMenuItemProps {\n  name: 'menu-item';\n  startIcon?: ReactElement;\n  endIcon?: ReactElement;\n}\n\ninterface MenuDividerProps {\n  name: 'divider';\n  className?: string;\n  style?: any;\n  children?: undefined;\n}\n\ninterface SubMenuProps extends RCSubMenuProps {\n  name: 'sub-menu';\n  menuItems: MenuItems;\n  children?: undefined;\n}\n\nexport interface MenuProps extends RCMenuProps {\n  hover?: boolean;\n  menuButton: any;\n  menuItems: MenuItems;\n}\nexport interface HoverMenuProps extends ControlledMenuProps {\n  hover?: boolean;\n  menuButton: any;\n  menuItems: MenuItems;\n}\n\nconst mapMenuItems = (menuItems: MenuItems) =>\n  menuItems.map(({ name, ...menuItem }, i) => {\n    if (name === 'sub-menu') {\n      const { menuItems: subMenuItems, ...menuItemProps } =\n        menuItem as SubMenuProps;\n      return (\n        <SubMenu key={i} {...(menuItemProps as SubMenuProps)}>\n          {mapMenuItems(subMenuItems)}\n        </SubMenu>\n      );\n    }\n\n    if (name === 'menu-item') {\n      const { startIcon, endIcon, children, ...menuItemProps } =\n        menuItem as MenuItemProps;\n      return (\n        <MenuItem key={i} {...menuItemProps}>\n          {startIcon}\n          <span className=\"rc-menu__item__children\">{children}</span>\n          {endIcon}\n        </MenuItem>\n      );\n    }\n\n    if (name === 'divider') {\n      return <MenuDivider key={i} {...(menuItem as MenuDividerProps)} />;\n    }\n\n    return null;\n  });\n\nexport const Menu: FC<MenuProps | HoverMenuProps> = (props) => {\n  const { toggleMenu, state, ...menuStateProps } = useMenuState();\n  const ref = useRef(null);\n\n  if ('hover' in props) {\n    const { menuButton, menuItems, hover, ...hoverMenuProps } = props;\n\n    return (\n      <div\n        className={classNames('lc-menu', { state })}\n        onMouseLeave={() => toggleMenu(false)}\n      >\n        <div\n          className=\"lc-menu-button-wrapper\"\n          ref={ref}\n          onMouseEnter={() => toggleMenu(true)}\n        >\n          {menuButton}\n        </div>\n        <ControlledMenu\n          {...menuStateProps}\n          {...(hoverMenuProps as HoverMenuProps)}\n          anchorRef={ref}\n          align=\"end\"\n          onClose={() => toggleMenu(false)}\n          onMouseLeave={() => toggleMenu(false)}\n        >\n          {mapMenuItems(menuItems)}\n        </ControlledMenu>\n      </div>\n    );\n  }\n\n  const { menuItems, ...menuProps } = props;\n\n  return (\n    <RCMenu\n      className=\"lc-menu\"\n      position=\"initial\"\n      {...(menuProps as MenuProps)}\n    >\n      {mapMenuItems(menuItems)}\n    </RCMenu>\n  );\n};\n"],
  "mappings": "+kBAAA,kCACA,4HAYA,mBACA,0BAkCA,KAAM,GAAe,AAAC,GACpB,EAAU,IAAI,CAAC,EAAuB,IAAM,CAA7B,QAAE,SAAF,EAAW,IAAX,EAAW,CAAT,SACf,GAAI,IAAS,WAAY,CACvB,KACE,KADM,WAAW,GACjB,EADkC,IAClC,EADkC,CAA5B,cAER,MACE,iBAAC,EAAD,GAAS,IAAK,GAAQ,GACnB,EAAa,IAKpB,GAAI,IAAS,YAAa,CACxB,KACE,KADM,aAAW,UAAS,YAC1B,EADuC,IACvC,EADuC,CAAjC,YAAW,UAAS,aAE5B,MACE,iBAAC,EAAD,GAAU,IAAK,GAAO,GACnB,EACD,gBAAC,OAAD,CAAM,UAAU,2BAA2B,GAC1C,GAKP,MAAI,KAAS,UACJ,gBAAC,EAAD,GAAa,IAAK,GAAQ,IAG5B,OAGE,EAAuC,AAAC,GAAU,CAC7D,KAAiD,OAAzC,cAAY,SAA6B,EAAnB,IAAmB,EAAnB,CAAtB,aAAY,UACd,EAAM,EAAO,MAEnB,GAAI,SAAW,GAAO,CACpB,KAA4D,KAApD,cAAY,YAAW,SAA6B,EAAnB,IAAmB,EAAnB,CAAjC,aAAY,YAAW,UAE/B,MACE,iBAAC,MAAD,CACE,UAAW,EAAW,UAAW,CAAE,UACnC,aAAc,IAAM,EAAW,KAE/B,gBAAC,MAAD,CACE,UAAU,yBACV,IAAK,EACL,aAAc,IAAM,EAAW,KAE9B,GAEH,gBAAC,EAAD,SACM,GACC,GAFP,CAGE,UAAW,EACX,MAAM,MACN,QAAS,IAAM,EAAW,IAC1B,aAAc,IAAM,EAAW,MAE9B,EAAa,KAMtB,KAAoC,KAA5B,cAA4B,EAAd,IAAc,EAAd,CAAd,cAER,MACE,iBAAC,EAAD,GACE,UAAU,UACV,SAAS,WACJ,GAEJ,EAAa",
  "names": []
}
